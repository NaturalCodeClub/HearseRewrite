From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: wangxyper <wangxyper@163.com>
Date: Wed, 11 Jan 2023 11:29:51 +0800
Subject: [PATCH] Fix some a stupid error


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 5e7f65e64538ccf38106833400eb052875df195a..ccee4e137b3b1df96ce9fcdcdc6bf270a0b1ad01 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -452,34 +452,33 @@ public final class CraftServer implements Server {
             // Purpur start
             List<File> extraJars = this.extraPluginJars();
             if (!Boolean.getBoolean("Purpur.IReallyDontWantSpark")) {
-                if (!HearseConfig.getBoolean("purpurmisc.auto-download-spark",true)){
-                    return;
-                }
-                try {
-                    File file = new File("cache", "spark.jar");
-                    file.getParentFile().mkdirs();
-
-                    boolean shouldDownload = true;
-                    if (file.exists()) {
-                        String fileSha1 = String.format("%040x", new java.math.BigInteger(1, java.security.MessageDigest.getInstance("SHA-1").digest(java.nio.file.Files.readAllBytes(file.toPath()))));
-                        String sparkSha1;
-                        try (java.io.BufferedReader reader = new java.io.BufferedReader(new InputStreamReader(new java.net.URL("https://sparkapi.lucko.me/download/bukkit/sha1").openStream()))) {
-                            sparkSha1 = reader.lines().collect(Collectors.joining(""));
+                if (HearseConfig.getBoolean("purpurmisc.auto-download-spark",true)){
+                    try {
+                        File file = new File("cache", "spark.jar");
+                        file.getParentFile().mkdirs();
+
+                        boolean shouldDownload = true;
+                        if (file.exists()) {
+                            String fileSha1 = String.format("%040x", new java.math.BigInteger(1, java.security.MessageDigest.getInstance("SHA-1").digest(java.nio.file.Files.readAllBytes(file.toPath()))));
+                            String sparkSha1;
+                            try (java.io.BufferedReader reader = new java.io.BufferedReader(new InputStreamReader(new java.net.URL("https://sparkapi.lucko.me/download/bukkit/sha1").openStream()))) {
+                                sparkSha1 = reader.lines().collect(Collectors.joining(""));
+                            }
+
+                            if (fileSha1.equals(sparkSha1)) {
+                                shouldDownload = false;
+                            }
                         }
 
-                        if (fileSha1.equals(sparkSha1)) {
-                            shouldDownload = false;
+                        if (shouldDownload) {
+                            java.nio.file.Files.copy(new java.net.URL("https://sparkapi.lucko.me/download/bukkit").openStream(), file.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING);
                         }
-                    }
 
-                    if (shouldDownload) {
-                        java.nio.file.Files.copy(new java.net.URL("https://sparkapi.lucko.me/download/bukkit").openStream(), file.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING);
+                        extraJars.add(file);
+                    } catch (Exception e) {
+                        getLogger().severe("Purpur: Failed to download and install spark plugin");
+                        e.printStackTrace();
                     }
-
-                    extraJars.add(file);
-                } catch (Exception e) {
-                    getLogger().severe("Purpur: Failed to download and install spark plugin");
-                    e.printStackTrace();
                 }
             }
             Plugin[] plugins = this.pluginManager.loadPlugins(pluginFolder, extraJars);
